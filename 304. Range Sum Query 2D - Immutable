/**
 * @param {number[][]} matrix
 */
var NumMatrix = function(matrix) {
    let sum = 0;
    this.arry = [];
    this.arry2 = [];

    for(let i = 0; i<matrix.length; i++){
        for(let j = 0; j<matrix[i].length; j++){
            sum = matrix[i][j] + sum;
            if(i>0){sum += this.arry[i - 1][j];}
            this.arry2.push(sum)
            if(i>0){sum -= this.arry[i - 1][j];}
        }
        sum = 0;
        this.arry.push(this.arry2);
        this.arry2 = [];
    }
};

/** 
 * @param {number} row1 
 * @param {number} col1 
 * @param {number} row2 
 * @param {number} col2
 * @return {number}
 */
NumMatrix.prototype.sumRegion = function(row1, col1, row2, col2) {
    let sum1 = 0;

    sum1 = this.arry[row2][col2];
    if(col1 != 0) sum1 -= this.arry[row2][col1 - 1];
    
    if(row1 != 0) sum1 -= this.arry[row1 - 1][col2];

    if(col1 != 0 && row1 != 0) sum1 += this.arry[row1 - 1][col1 -1]

    return sum1;
};

/** 
 * Your NumMatrix object will be instantiated and called as such:
 * var obj = new NumMatrix(matrix)
 * var param_1 = obj.sumRegion(row1,col1,row2,col2)
 */
